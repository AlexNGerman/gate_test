/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_app_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/app.scss */ \"./src/scss/app.scss\");\n/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tooltip */ \"./src/js/tooltip.js\");\n/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tooltip__WEBPACK_IMPORTED_MODULE_1__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2dhdGVfdGVzdC8uL3NyYy9qcy9hcHAuanM/OTBlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL3Njc3MvYXBwLnNjc3MnO1xuaW1wb3J0ICcuL3Rvb2x0aXAnXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/app.js\n");

/***/ }),

/***/ "./src/js/tooltip.js":
/*!***************************!*\
  !*** ./src/js/tooltip.js ***!
  \***************************/
/***/ (() => {

eval("(() => {\n  const TOOLTIP_ATTR = 'data-tooltip';\n  const PLACEMENT_ATTR = 'data-placement';\n  const DEFAULT_PLACEMENT = 'top';\n  const tooltip = document.createElement('div');\n  tooltip.className = 'tooltip';\n  tooltip.setAttribute('role', 'tooltip');\n  tooltip.setAttribute('aria-hidden', 'true');\n  tooltip.id = 'tooltip-' + Math.random().toString(36).slice(2, 9);\n  document.body.appendChild(tooltip);\n  let currentTrigger = null;\n\n  const ensureFocusable = el => {\n    if (!(el instanceof Element)) return;\n    const tag = el.tagName.toLowerCase();\n    const naturallyFocusable = ['a', 'button', 'input', 'textarea', 'select'].includes(tag) && (tag !== 'a' || el.hasAttribute('href'));\n\n    if (!naturallyFocusable && !el.hasAttribute('tabindex')) {\n      el.setAttribute('tabindex', '0');\n    }\n  };\n\n  const makeAllTooltipTriggersFocusable = (root = document) => {\n    root.querySelectorAll(`[${TOOLTIP_ATTR}]`).forEach(ensureFocusable);\n  };\n\n  const showTooltipFor = el => {\n    if (!(el instanceof Element)) return;\n    const text = el.getAttribute(TOOLTIP_ATTR);\n    if (!text) return;\n    if (currentTrigger && currentTrigger !== el) hideTooltip();\n    currentTrigger = el;\n    tooltip.textContent = text;\n    tooltip.dataset.placement = el.getAttribute(PLACEMENT_ATTR) || DEFAULT_PLACEMENT;\n    tooltip.dataset.state = 'visible';\n    tooltip.setAttribute('aria-hidden', 'false');\n    el.setAttribute('aria-describedby', tooltip.id);\n    requestAnimationFrame(positionTooltip);\n  };\n\n  const hideTooltip = () => {\n    if (!currentTrigger) return;\n    tooltip.dataset.state = 'hidden';\n    tooltip.setAttribute('aria-hidden', 'true');\n    currentTrigger.removeAttribute('aria-describedby');\n    currentTrigger = null;\n  };\n\n  const positionTooltip = () => {\n    if (!currentTrigger) return;\n    tooltip.style.left = '0px';\n    tooltip.style.top = '0px';\n    const prevVisibility = tooltip.style.visibility;\n    tooltip.style.visibility = 'hidden';\n    tooltip.style.display = 'inline-block';\n    const rect = currentTrigger.getBoundingClientRect();\n    const ttRect = tooltip.getBoundingClientRect();\n    const gap = 8;\n    const viewport = {\n      width: document.documentElement.clientWidth,\n      height: document.documentElement.clientHeight\n    };\n    const preferred = tooltip.dataset.placement || DEFAULT_PLACEMENT;\n    const candidates = [preferred, 'top', 'right', 'bottom', 'left'].filter((v, i, a) => a.indexOf(v) === i);\n\n    const computeCoords = placement => {\n      let left = 0,\n          top = 0;\n\n      switch (placement) {\n        case 'top':\n          left = rect.left + (rect.width - ttRect.width) / 2;\n          top = rect.top - ttRect.height - gap;\n          break;\n\n        case 'bottom':\n          left = rect.left + (rect.width - ttRect.width) / 2;\n          top = rect.bottom + gap;\n          break;\n\n        case 'left':\n          left = rect.left - ttRect.width - gap;\n          top = rect.top + (rect.height - ttRect.height) / 2;\n          break;\n\n        case 'right':\n        default:\n          left = rect.right + gap;\n          top = rect.top + (rect.height - ttRect.height) / 2;\n          break;\n      }\n\n      return {\n        left: Math.round(left),\n        top: Math.round(top),\n        w: ttRect.width,\n        h: ttRect.height\n      };\n    };\n\n    let chosen = candidates.find(p => {\n      const c = computeCoords(p);\n      return c.left >= 0 && c.top >= 0 && c.left + c.w <= viewport.width && c.top + c.h <= viewport.height;\n    });\n\n    if (!chosen) {\n      let best = {\n        area: -1,\n        place: candidates[0]\n      };\n      candidates.forEach(p => {\n        const c = computeCoords(p);\n        const x1 = Math.max(0, c.left);\n        const y1 = Math.max(0, c.top);\n        const x2 = Math.min(viewport.width, c.left + c.w);\n        const y2 = Math.min(viewport.height, c.top + c.h);\n        const area = Math.max(0, x2 - x1) * Math.max(0, y2 - y1);\n        if (area > best.area) best = {\n          area,\n          place: p\n        };\n      });\n      chosen = best.place;\n    }\n\n    tooltip.dataset.placement = chosen;\n    const final = computeCoords(chosen);\n    const pad = 6;\n    const left = Math.min(Math.max(final.left, pad), viewport.width - final.w - pad);\n    const top = Math.min(Math.max(final.top, pad), viewport.height - final.h - pad);\n    tooltip.style.left = left + window.scrollX + 'px';\n    tooltip.style.top = top + window.scrollY + 'px';\n    tooltip.style.visibility = prevVisibility;\n  };\n\n  const closestIfElement = (node, selector) => node instanceof Element ? node.closest(selector) : null;\n\n  document.addEventListener('pointerenter', e => {\n    const el = closestIfElement(e.target, `[${TOOLTIP_ATTR}]`);\n    if (el) showTooltipFor(el);\n  }, true);\n  document.addEventListener('pointerleave', e => {\n    const from = closestIfElement(e.target, `[${TOOLTIP_ATTR}]`);\n    if (!from) return;\n    const related = e.relatedTarget;\n    if (related instanceof Node && from.contains(related)) return;\n    hideTooltip();\n  }, true);\n  document.addEventListener('focusin', e => {\n    const el = closestIfElement(e.target, `[${TOOLTIP_ATTR}]`);\n    if (el) showTooltipFor(el);\n  });\n  document.addEventListener('focusout', e => {\n    const el = closestIfElement(e.target, `[${TOOLTIP_ATTR}]`);\n    if (!el) return;\n    const related = e.relatedTarget;\n    if (related instanceof Node && el.contains(related)) return;\n    hideTooltip();\n  });\n  document.addEventListener('keydown', e => {\n    if (e.key === 'Escape') hideTooltip();\n  });\n  window.addEventListener('scroll', () => {\n    if (currentTrigger) requestAnimationFrame(positionTooltip);\n  }, {\n    passive: true\n  });\n  window.addEventListener('resize', () => {\n    if (currentTrigger) requestAnimationFrame(positionTooltip);\n  });\n  const mo = new MutationObserver(mutations => {\n    mutations.forEach(m => {\n      if (m.type === 'childList' && m.addedNodes.length) {\n        m.addedNodes.forEach(n => {\n          if (n instanceof Element) {\n            if (n.hasAttribute(TOOLTIP_ATTR)) ensureFocusable(n);\n            makeAllTooltipTriggersFocusable(n);\n          }\n        });\n      }\n    });\n  });\n  mo.observe(document.body, {\n    childList: true,\n    subtree: true\n  });\n  makeAllTooltipTriggersFocusable();\n  const addBtn = document.getElementById('add');\n\n  if (addBtn) {\n    addBtn.addEventListener('click', () => {\n      const span = document.createElement('span');\n      span.className = 'dynamic';\n      span.setAttribute(TOOLTIP_ATTR, 'Dynamically added tooltip description');\n      span.textContent = 'Dynamically added element';\n      const container = document.getElementById('container');\n      if (container) container.appendChild(span);\n      ensureFocusable(span);\n    });\n  }\n\n  window.addEventListener('unload', () => mo.disconnect());\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYXRlX3Rlc3QvLi9zcmMvanMvdG9vbHRpcC5qcz8wNDJlIl0sIm5hbWVzIjpbIlRPT0xUSVBfQVRUUiIsIlBMQUNFTUVOVF9BVFRSIiwiREVGQVVMVF9QTEFDRU1FTlQiLCJ0b29sdGlwIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwic2V0QXR0cmlidXRlIiwiaWQiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzbGljZSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImN1cnJlbnRUcmlnZ2VyIiwiZW5zdXJlRm9jdXNhYmxlIiwiZWwiLCJFbGVtZW50IiwidGFnIiwidGFnTmFtZSIsInRvTG93ZXJDYXNlIiwibmF0dXJhbGx5Rm9jdXNhYmxlIiwiaW5jbHVkZXMiLCJoYXNBdHRyaWJ1dGUiLCJtYWtlQWxsVG9vbHRpcFRyaWdnZXJzRm9jdXNhYmxlIiwicm9vdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwic2hvd1Rvb2x0aXBGb3IiLCJ0ZXh0IiwiZ2V0QXR0cmlidXRlIiwiaGlkZVRvb2x0aXAiLCJ0ZXh0Q29udGVudCIsImRhdGFzZXQiLCJwbGFjZW1lbnQiLCJzdGF0ZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInBvc2l0aW9uVG9vbHRpcCIsInJlbW92ZUF0dHJpYnV0ZSIsInN0eWxlIiwibGVmdCIsInRvcCIsInByZXZWaXNpYmlsaXR5IiwidmlzaWJpbGl0eSIsImRpc3BsYXkiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidHRSZWN0IiwiZ2FwIiwidmlld3BvcnQiLCJ3aWR0aCIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudFdpZHRoIiwiaGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwicHJlZmVycmVkIiwiY2FuZGlkYXRlcyIsImZpbHRlciIsInYiLCJpIiwiYSIsImluZGV4T2YiLCJjb21wdXRlQ29vcmRzIiwiYm90dG9tIiwicmlnaHQiLCJyb3VuZCIsInciLCJoIiwiY2hvc2VuIiwiZmluZCIsInAiLCJjIiwiYmVzdCIsImFyZWEiLCJwbGFjZSIsIngxIiwibWF4IiwieTEiLCJ4MiIsIm1pbiIsInkyIiwiZmluYWwiLCJwYWQiLCJ3aW5kb3ciLCJzY3JvbGxYIiwic2Nyb2xsWSIsImNsb3Nlc3RJZkVsZW1lbnQiLCJub2RlIiwic2VsZWN0b3IiLCJjbG9zZXN0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJ0YXJnZXQiLCJmcm9tIiwicmVsYXRlZCIsInJlbGF0ZWRUYXJnZXQiLCJOb2RlIiwiY29udGFpbnMiLCJrZXkiLCJwYXNzaXZlIiwibW8iLCJNdXRhdGlvbk9ic2VydmVyIiwibXV0YXRpb25zIiwibSIsInR5cGUiLCJhZGRlZE5vZGVzIiwibGVuZ3RoIiwibiIsIm9ic2VydmUiLCJjaGlsZExpc3QiLCJzdWJ0cmVlIiwiYWRkQnRuIiwiZ2V0RWxlbWVudEJ5SWQiLCJzcGFuIiwiY29udGFpbmVyIiwiZGlzY29ubmVjdCJdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQyxNQUFNO0FBQ0wsUUFBTUEsWUFBWSxHQUFHLGNBQXJCO0FBQ0EsUUFBTUMsY0FBYyxHQUFHLGdCQUF2QjtBQUNBLFFBQU1DLGlCQUFpQixHQUFHLEtBQTFCO0FBRUEsUUFBTUMsT0FBTyxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBaEI7QUFDQUYsRUFBQUEsT0FBTyxDQUFDRyxTQUFSLEdBQW9CLFNBQXBCO0FBQ0FILEVBQUFBLE9BQU8sQ0FBQ0ksWUFBUixDQUFxQixNQUFyQixFQUE2QixTQUE3QjtBQUNBSixFQUFBQSxPQUFPLENBQUNJLFlBQVIsQ0FBcUIsYUFBckIsRUFBb0MsTUFBcEM7QUFDQUosRUFBQUEsT0FBTyxDQUFDSyxFQUFSLEdBQWEsYUFBYUMsSUFBSSxDQUFDQyxNQUFMLEdBQWNDLFFBQWQsQ0FBdUIsRUFBdkIsRUFBMkJDLEtBQTNCLENBQWlDLENBQWpDLEVBQW9DLENBQXBDLENBQTFCO0FBQ0FSLEVBQUFBLFFBQVEsQ0FBQ1MsSUFBVCxDQUFjQyxXQUFk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KCkgPT4ge1xuICBjb25zdCBUT09MVElQX0FUVFIgPSAnZGF0YS10b29sdGlwJztcbiAgY29uc3QgUExBQ0VNRU5UX0FUVFIgPSAnZGF0YS1wbGFjZW1lbnQnO1xuICBjb25zdCBERUZBVUxUX1BMQUNFTUVOVCA9ICd0b3AnO1xuXG4gIGNvbnN0IHRvb2x0aXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdG9vbHRpcC5jbGFzc05hbWUgPSAndG9vbHRpcCc7XG4gIHRvb2x0aXAuc2V0QXR0cmlidXRlKCdyb2xlJywgJ3Rvb2x0aXAnKTtcbiAgdG9vbHRpcC5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKTtcbiAgdG9vbHRpcC5pZCA9ICd0b29sdGlwLScgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyLCA5KTtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0b29sdGlwKTtcblxuICBsZXQgY3VycmVudFRyaWdnZXIgPSBudWxsO1xuXG4gIGNvbnN0IGVuc3VyZUZvY3VzYWJsZSA9IGVsID0+IHtcbiAgICBpZiAoIShlbCBpbnN0YW5jZW9mIEVsZW1lbnQpKSByZXR1cm47XG4gICAgY29uc3QgdGFnID0gZWwudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IG5hdHVyYWxseUZvY3VzYWJsZSA9IFsnYScsICdidXR0b24nLCAnaW5wdXQnLCAndGV4dGFyZWEnLCAnc2VsZWN0J10uaW5jbHVkZXModGFnKSAmJiAodGFnICE9PSAnYScgfHwgZWwuaGFzQXR0cmlidXRlKCdocmVmJykpO1xuICAgIGlmICghbmF0dXJhbGx5Rm9jdXNhYmxlICYmICFlbC5oYXNBdHRyaWJ1dGUoJ3RhYmluZGV4JykpIHtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnMCcpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBtYWtlQWxsVG9vbHRpcFRyaWdnZXJzRm9jdXNhYmxlID0gKHJvb3QgPSBkb2N1bWVudCkgPT4ge1xuICAgIHJvb3QucXVlcnlTZWxlY3RvckFsbChgWyR7VE9PTFRJUF9BVFRSfV1gKS5mb3JFYWNoKGVuc3VyZUZvY3VzYWJsZSk7XG4gIH07XG5cbiAgY29uc3Qgc2hvd1Rvb2x0aXBGb3IgPSBlbCA9PiB7XG4gICAgaWYgKCEoZWwgaW5zdGFuY2VvZiBFbGVtZW50KSkgcmV0dXJuO1xuICAgIGNvbnN0IHRleHQgPSBlbC5nZXRBdHRyaWJ1dGUoVE9PTFRJUF9BVFRSKTtcbiAgICBpZiAoIXRleHQpIHJldHVybjtcblxuICAgIGlmIChjdXJyZW50VHJpZ2dlciAmJiBjdXJyZW50VHJpZ2dlciAhPT0gZWwpIGhpZGVUb29sdGlwKCk7XG4gICAgY3VycmVudFRyaWdnZXIgPSBlbDtcblxuICAgIHRvb2x0aXAudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgIHRvb2x0aXAuZGF0YXNldC5wbGFjZW1lbnQgPSBlbC5nZXRBdHRyaWJ1dGUoUExBQ0VNRU5UX0FUVFIpIHx8IERFRkFVTFRfUExBQ0VNRU5UO1xuICAgIHRvb2x0aXAuZGF0YXNldC5zdGF0ZSA9ICd2aXNpYmxlJztcbiAgICB0b29sdGlwLnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAnZmFsc2UnKTtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknLCB0b29sdGlwLmlkKTtcblxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShwb3NpdGlvblRvb2x0aXApO1xuICB9O1xuXG4gIGNvbnN0IGhpZGVUb29sdGlwID0gKCkgPT4ge1xuICAgIGlmICghY3VycmVudFRyaWdnZXIpIHJldHVybjtcbiAgICB0b29sdGlwLmRhdGFzZXQuc3RhdGUgPSAnaGlkZGVuJztcbiAgICB0b29sdGlwLnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xuICAgIGN1cnJlbnRUcmlnZ2VyLnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1kZXNjcmliZWRieScpO1xuICAgIGN1cnJlbnRUcmlnZ2VyID0gbnVsbDtcbiAgfTtcblxuICBjb25zdCBwb3NpdGlvblRvb2x0aXAgPSAoKSA9PiB7XG4gICAgaWYgKCFjdXJyZW50VHJpZ2dlcikgcmV0dXJuO1xuICAgIHRvb2x0aXAuc3R5bGUubGVmdCA9ICcwcHgnO1xuICAgIHRvb2x0aXAuc3R5bGUudG9wID0gJzBweCc7XG4gICAgY29uc3QgcHJldlZpc2liaWxpdHkgPSB0b29sdGlwLnN0eWxlLnZpc2liaWxpdHk7XG4gICAgdG9vbHRpcC5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gICAgdG9vbHRpcC5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XG5cbiAgICBjb25zdCByZWN0ID0gY3VycmVudFRyaWdnZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3QgdHRSZWN0ID0gdG9vbHRpcC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCBnYXAgPSA4O1xuICAgIGNvbnN0IHZpZXdwb3J0ID0geyB3aWR0aDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoLCBoZWlnaHQ6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgfTtcbiAgICBjb25zdCBwcmVmZXJyZWQgPSB0b29sdGlwLmRhdGFzZXQucGxhY2VtZW50IHx8IERFRkFVTFRfUExBQ0VNRU5UO1xuICAgIGNvbnN0IGNhbmRpZGF0ZXMgPSBbcHJlZmVycmVkLCAndG9wJywgJ3JpZ2h0JywgJ2JvdHRvbScsICdsZWZ0J10uZmlsdGVyKCh2LCBpLCBhKSA9PiBhLmluZGV4T2YodikgPT09IGkpO1xuXG4gICAgY29uc3QgY29tcHV0ZUNvb3JkcyA9IHBsYWNlbWVudCA9PiB7XG4gICAgICBsZXQgbGVmdCA9IDAsIHRvcCA9IDA7XG4gICAgICBzd2l0Y2ggKHBsYWNlbWVudCkge1xuICAgICAgICBjYXNlICd0b3AnOlxuICAgICAgICAgIGxlZnQgPSByZWN0LmxlZnQgKyAocmVjdC53aWR0aCAtIHR0UmVjdC53aWR0aCkgLyAyO1xuICAgICAgICAgIHRvcCA9IHJlY3QudG9wIC0gdHRSZWN0LmhlaWdodCAtIGdhcDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnYm90dG9tJzpcbiAgICAgICAgICBsZWZ0ID0gcmVjdC5sZWZ0ICsgKHJlY3Qud2lkdGggLSB0dFJlY3Qud2lkdGgpIC8gMjtcbiAgICAgICAgICB0b3AgPSByZWN0LmJvdHRvbSArIGdhcDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnbGVmdCc6XG4gICAgICAgICAgbGVmdCA9IHJlY3QubGVmdCAtIHR0UmVjdC53aWR0aCAtIGdhcDtcbiAgICAgICAgICB0b3AgPSByZWN0LnRvcCArIChyZWN0LmhlaWdodCAtIHR0UmVjdC5oZWlnaHQpIC8gMjtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncmlnaHQnOlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGxlZnQgPSByZWN0LnJpZ2h0ICsgZ2FwO1xuICAgICAgICAgIHRvcCA9IHJlY3QudG9wICsgKHJlY3QuaGVpZ2h0IC0gdHRSZWN0LmhlaWdodCkgLyAyO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHsgbGVmdDogTWF0aC5yb3VuZChsZWZ0KSwgdG9wOiBNYXRoLnJvdW5kKHRvcCksIHc6IHR0UmVjdC53aWR0aCwgaDogdHRSZWN0LmhlaWdodCB9O1xuICAgIH07XG5cbiAgICBsZXQgY2hvc2VuID0gY2FuZGlkYXRlcy5maW5kKHAgPT4ge1xuICAgICAgY29uc3QgYyA9IGNvbXB1dGVDb29yZHMocCk7XG4gICAgICByZXR1cm4gYy5sZWZ0ID49IDAgJiYgYy50b3AgPj0gMCAmJiAoYy5sZWZ0ICsgYy53KSA8PSB2aWV3cG9ydC53aWR0aCAmJiAoYy50b3AgKyBjLmgpIDw9IHZpZXdwb3J0LmhlaWdodDtcbiAgICB9KTtcblxuICAgIGlmICghY2hvc2VuKSB7XG4gICAgICBsZXQgYmVzdCA9IHsgYXJlYTogLTEsIHBsYWNlOiBjYW5kaWRhdGVzWzBdIH07XG4gICAgICBjYW5kaWRhdGVzLmZvckVhY2gocCA9PiB7XG4gICAgICAgIGNvbnN0IGMgPSBjb21wdXRlQ29vcmRzKHApO1xuICAgICAgICBjb25zdCB4MSA9IE1hdGgubWF4KDAsIGMubGVmdCk7XG4gICAgICAgIGNvbnN0IHkxID0gTWF0aC5tYXgoMCwgYy50b3ApO1xuICAgICAgICBjb25zdCB4MiA9IE1hdGgubWluKHZpZXdwb3J0LndpZHRoLCBjLmxlZnQgKyBjLncpO1xuICAgICAgICBjb25zdCB5MiA9IE1hdGgubWluKHZpZXdwb3J0LmhlaWdodCwgYy50b3AgKyBjLmgpO1xuICAgICAgICBjb25zdCBhcmVhID0gTWF0aC5tYXgoMCwgeDIgLSB4MSkgKiBNYXRoLm1heCgwLCB5MiAtIHkxKTtcbiAgICAgICAgaWYgKGFyZWEgPiBiZXN0LmFyZWEpIGJlc3QgPSB7IGFyZWEsIHBsYWNlOiBwIH07XG4gICAgICB9KTtcbiAgICAgIGNob3NlbiA9IGJlc3QucGxhY2U7XG4gICAgfVxuXG4gICAgdG9vbHRpcC5kYXRhc2V0LnBsYWNlbWVudCA9IGNob3NlbjtcbiAgICBjb25zdCBmaW5hbCA9IGNvbXB1dGVDb29yZHMoY2hvc2VuKTtcbiAgICBjb25zdCBwYWQgPSA2O1xuICAgIGNvbnN0IGxlZnQgPSBNYXRoLm1pbihNYXRoLm1heChmaW5hbC5sZWZ0LCBwYWQpLCB2aWV3cG9ydC53aWR0aCAtIGZpbmFsLncgLSBwYWQpO1xuICAgIGNvbnN0IHRvcCA9IE1hdGgubWluKE1hdGgubWF4KGZpbmFsLnRvcCwgcGFkKSwgdmlld3BvcnQuaGVpZ2h0IC0gZmluYWwuaCAtIHBhZCk7XG5cbiAgICB0b29sdGlwLnN0eWxlLmxlZnQgPSAobGVmdCArIHdpbmRvdy5zY3JvbGxYKSArICdweCc7XG4gICAgdG9vbHRpcC5zdHlsZS50b3AgPSAodG9wICsgd2luZG93LnNjcm9sbFkpICsgJ3B4JztcbiAgICB0b29sdGlwLnN0eWxlLnZpc2liaWxpdHkgPSBwcmV2VmlzaWJpbGl0eTtcbiAgfTtcblxuICBjb25zdCBjbG9zZXN0SWZFbGVtZW50ID0gKG5vZGUsIHNlbGVjdG9yKSA9PiBub2RlIGluc3RhbmNlb2YgRWxlbWVudCA/IG5vZGUuY2xvc2VzdChzZWxlY3RvcikgOiBudWxsO1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJlbnRlcicsIGUgPT4ge1xuICAgIGNvbnN0IGVsID0gY2xvc2VzdElmRWxlbWVudChlLnRhcmdldCwgYFske1RPT0xUSVBfQVRUUn1dYCk7XG4gICAgaWYgKGVsKSBzaG93VG9vbHRpcEZvcihlbCk7XG4gIH0sIHRydWUpO1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJsZWF2ZScsIGUgPT4ge1xuICAgIGNvbnN0IGZyb20gPSBjbG9zZXN0SWZFbGVtZW50KGUudGFyZ2V0LCBgWyR7VE9PTFRJUF9BVFRSfV1gKTtcbiAgICBpZiAoIWZyb20pIHJldHVybjtcbiAgICBjb25zdCByZWxhdGVkID0gZS5yZWxhdGVkVGFyZ2V0O1xuICAgIGlmIChyZWxhdGVkIGluc3RhbmNlb2YgTm9kZSAmJiBmcm9tLmNvbnRhaW5zKHJlbGF0ZWQpKSByZXR1cm47XG4gICAgaGlkZVRvb2x0aXAoKTtcbiAgfSwgdHJ1ZSk7XG5cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNpbicsIGUgPT4ge1xuICAgIGNvbnN0IGVsID0gY2xvc2VzdElmRWxlbWVudChlLnRhcmdldCwgYFske1RPT0xUSVBfQVRUUn1dYCk7XG4gICAgaWYgKGVsKSBzaG93VG9vbHRpcEZvcihlbCk7XG4gIH0pO1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3Vzb3V0JywgZSA9PiB7XG4gICAgY29uc3QgZWwgPSBjbG9zZXN0SWZFbGVtZW50KGUudGFyZ2V0LCBgWyR7VE9PTFRJUF9BVFRSfV1gKTtcbiAgICBpZiAoIWVsKSByZXR1cm47XG4gICAgY29uc3QgcmVsYXRlZCA9IGUucmVsYXRlZFRhcmdldDtcbiAgICBpZiAocmVsYXRlZCBpbnN0YW5jZW9mIE5vZGUgJiYgZWwuY29udGFpbnMocmVsYXRlZCkpIHJldHVybjtcbiAgICBoaWRlVG9vbHRpcCgpO1xuICB9KTtcblxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZSA9PiB7XG4gICAgaWYgKGUua2V5ID09PSAnRXNjYXBlJykgaGlkZVRvb2x0aXAoKTtcbiAgfSk7XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsICgpID0+IHtcbiAgICBpZiAoY3VycmVudFRyaWdnZXIpIHJlcXVlc3RBbmltYXRpb25GcmFtZShwb3NpdGlvblRvb2x0aXApO1xuICB9LCB7IHBhc3NpdmU6IHRydWUgfSk7XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsICgpID0+IHtcbiAgICBpZiAoY3VycmVudFRyaWdnZXIpIHJlcXVlc3RBbmltYXRpb25GcmFtZShwb3NpdGlvblRvb2x0aXApO1xuICB9KTtcblxuICBjb25zdCBtbyA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7XG4gICAgbXV0YXRpb25zLmZvckVhY2gobSA9PiB7XG4gICAgICBpZiAobS50eXBlID09PSAnY2hpbGRMaXN0JyAmJiBtLmFkZGVkTm9kZXMubGVuZ3RoKSB7XG4gICAgICAgIG0uYWRkZWROb2Rlcy5mb3JFYWNoKG4gPT4ge1xuICAgICAgICAgIGlmIChuIGluc3RhbmNlb2YgRWxlbWVudCkge1xuICAgICAgICAgICAgaWYgKG4uaGFzQXR0cmlidXRlKFRPT0xUSVBfQVRUUikpIGVuc3VyZUZvY3VzYWJsZShuKTtcbiAgICAgICAgICAgIG1ha2VBbGxUb29sdGlwVHJpZ2dlcnNGb2N1c2FibGUobik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG5cbiAgbW8ub2JzZXJ2ZShkb2N1bWVudC5ib2R5LCB7IGNoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZSB9KTtcbiAgbWFrZUFsbFRvb2x0aXBUcmlnZ2Vyc0ZvY3VzYWJsZSgpO1xuXG4gIGNvbnN0IGFkZEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGQnKTtcbiAgaWYgKGFkZEJ0bikge1xuICAgIGFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICBzcGFuLmNsYXNzTmFtZSA9ICdkeW5hbWljJztcbiAgICAgIHNwYW4uc2V0QXR0cmlidXRlKFRPT0xUSVBfQVRUUiwgJ0R5bmFtaWNhbGx5IGFkZGVkIHRvb2x0aXAgZGVzY3JpcHRpb24nKTtcbiAgICAgIHNwYW4udGV4dENvbnRlbnQgPSAnRHluYW1pY2FsbHkgYWRkZWQgZWxlbWVudCc7XG4gICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJyk7XG4gICAgICBpZiAoY29udGFpbmVyKSBjb250YWluZXIuYXBwZW5kQ2hpbGQoc3Bhbik7XG4gICAgICBlbnN1cmVGb2N1c2FibGUoc3Bhbik7XG4gICAgfSk7XG4gIH1cblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndW5sb2FkJywgKCkgPT4gbW8uZGlzY29ubmVjdCgpKTtcbn0pKCk7XG4iXSwiZmlsZSI6Ii4vc3JjL2pzL3Rvb2x0aXAuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/tooltip.js\n");

/***/ }),

/***/ "./src/scss/app.scss":
/*!***************************!*\
  !*** ./src/scss/app.scss ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2Nzcy9hcHAuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYXRlX3Rlc3QvLi9zcmMvc2Nzcy9hcHAuc2Nzcz84ZDQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scss/app.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;